// 兼容性
@mixin opactiy($opacity) {
    filter: alpha($opacity*100);
    -moz-opacity: $opacity;
    -khtml-opacity: $opacity;
    opacity: $opacity;
}

@mixin box-shadow($shadow...) {
    box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    -webkit-box-shadow: $shadow;
}

@mixin border-radius($radius) {
    border-radius: $radius;
    -moz-border-radius: $radius;
    -webkit-border-radius: $radius;
}

@mixin box-sizing($box) {
    -moz-box-sizing: $box;
    -webkit-box-sizing: $box;
    box-sizing: $box;
}

@mixin transition($key, $value) {
    -moz-transition: $key, $value;
    -webkit-transition: $key, $value;
    -o-transition: $key, $value;
    -ms-transition: $key, $value;
    transition: $key, $value;
}

@mixin perspective($value){
    -ms-perspective: $value;
    -webkit-perspective: $value;
    -moz-perspective:$value;
    perspective:$value;
}

@mixin perspective-origin($x){
    -ms-perspective-origin: $x;
    -webkit-perspective-origin: $x;
    -moz-perspective-origin:$x;
    perspective-origin:$x;
}
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}

@mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
    -o-transform-origin: $origin;
    -ms-transform-origin: $origin;
    -webkit-transform-origin: $origin;
    transform-origin: $origin;
}

@mixin rotate ($deg) {
    @include transform(rotate(#{$deg}deg));
}

@mixin scale($scale) {
    @include transform(scale($scale));
}

@mixin translate ($x, $y) {
    @include transform(translate($x, $y));
}

@mixin translateX ($x) {
    @include transform(translateX($x));
}

@mixin translateY ($x) {
    @include transform(translateY($x));
}

@mixin skew ($x, $y) {
    @include transform(skew(#{$x}deg, #{$y}deg));
}

@mixin text-overflow($ellipsis) {
    text-overflow: $ellipsis;
    -o-text-overflow: $ellipsis;
    -webkit-text-overflow: $ellipsis;
    -moz-text-overflow: $ellipsis;
}


@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }

    @-moz-keyframes #{$animation-name} {
        @content;
    }

    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($params) {
    -webkit-animation: $params;
    -moz-animation: $params;
    animation: $params;
}

@mixin calc($name,$e) {
    #{$name}: -moz-calc(#{$e});
    #{$name}: -webkit-calc(#{$e});
    #{$name}: calc(#{$e});
}

@mixin user-select($none) {
    -webkit-touch-callout: $none;
    -webkit-user-select: $none;
    -khtml-user-select: $none;
    -moz-user-select: $none;
    -ms-user-select: $none;
    user-select: $none;
}

@mixin palcehold-color($color) {
    &::-webkit-input-placeholder {
        color: $color;
    }

    & :-moz-placeholder {
        color: $color;
    }

    & ::-moz-placeholder {
        color: $color;
    }

    &:-ms-input-placeholder {
        color: $color;
    }
}

@mixin tbrl-writing-mode {
    writing-mode: tb-rl;
    *writing-mode: tb-rl;
    writing-mode: vertical-rl;
    -webkit-writing-mode: vertical-rl;
}

@mixin display-flex {
    display: box;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    display: flexbox;
    display: -webkit-flex;
    display: -moz-flex;
}

@mixin item-flex($val) {
    -prefix-box-flex: $val;
    -moz-box-flex: $val;
    flex: $val;
    -webkit-box-flex: $val;
    -ms-flex: $val;
    -webkit-flex: $val;
}

@mixin display-inline-flex {
    display: inline-box;
    display: inline-flex;
    display: inline-flexbox;
}

@mixin justify-content($val) {
    -webkit-justify-content: $val;
    -moz-justify-content: $val;
    -ms-justify-content: $val;
    -o-justify-content: $val;
    justify-content: $val;
    -webkit-box-pack: $val;
}
